name: msys

on:
  push:
  workflow_dispatch:

jobs:
  windows:
    runs-on: windows-2019
    timeout-minutes: 45
    env:
      DEPS_BUILD_DIR: ${{ format('{0}/nvim-deps', github.workspace) }}
      DEPS_PREFIX: ${{ format('{0}/nvim-deps/usr', github.workspace) }}

    strategy:
      fail-fast: false
      matrix:
        config: [ 'MINGW_64-gcov' ]
    name: windows (${{ matrix.config }})
    steps:
      - uses: actions/checkout@v2

      - if: matrix.config == 'MINGW_64-gcov'
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-ninja

      - name: run on pwsh
        shell: pwsh
        run: |
          $MINGW_PREFIX = (& msys2 -c 'cygpath -w /') + "mingw64\bin"
          $env:PATH = "$MINGW_PREFIX;$env:PATH"
          Get-Command -Name cmake
          [Environment]::GetEnvironmentVariables()
          Write-Output "project(foo)" | Out-File CMakeLists.txt
          cmake -G Ninja -LA .
          git clean -qfdx

      - name: run on msys
        shell: msys2 {0}
        run: |
          echo $PATH
          echo "project(foo)" > CMakeLists.txt
          cmake -G Ninja -LA .
